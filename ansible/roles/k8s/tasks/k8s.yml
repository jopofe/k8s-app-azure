---

# tasks file for k8s

# Habilitar transparent masquerading
# https://docs.ansible.com/ansible/2.9/modules/modprobe_module.html
- name: Load kernel module br_netfilter
  modprobe:
    name: br_netfilter
    state: present

- name: Add masquerade
  firewalld:
    masquerade: yes
    state: enabled
    permanent: true
    zone: public

# Reiniciamos el servicio de firewalld
- name: Reinicio FW
  systemd:
    name: firewalld
    state: restarted
    enabled: yes
    masked: no

- name: Añadimos la información en el archivo k8s.config
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
  
# Ejecutamos el comando vía SHELL
- name: 'sysctl --system'
  shell: sysctl --system

# Desactivamos memoria SWAP
- name: 'Deactivate SWAP'
  shell: swapoff -a

# Instalación de CRI-O
# Utilizar get_url module
# OJO !!!! Estamos usando CentOS_8_Stream !!!!
- name: Adding repos
  shell: |
    VERSION=1.24
    OS=CentOS_8_Stream
    sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
    sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo

# Instalación de CRI-O
- name: Instalación cri-o
  dnf:
    name:
      - cri-o 
    state: present

# Habilitamos módulos
- name: Creamos crio.conf
  file:
    path: /etc/modules-load.d/crio.conf
    state: touch

- name: Añadimos las líneas correspondientes
  lineinfile:
    path: /etc/modules-load.d/crio.conf
    state: present
    line: "{{ item }}"
  with_items:
  - 'overlay'
  - 'br_netfilter'

- name: Habilitar cri-o 
  systemd:
    name: crio
    state: started
    enabled: yes

# Habilitamos repo de K8s
- name: Habilitar repo K8s
  yum_repository:
    name: Kubernetes
    description: Repo K8s
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kubelet kubeadm kubectl

# Instalación K8s
- name: Instalación K8s
  dnf:
    name: "{{ packages }}"
    state: present
    disable_excludes: Kubernetes

- name: Habilitar e iniciar el servicio de kubelet
  systemd:
    name: kubelet
    state: started
    enabled: yes
    masked: no
